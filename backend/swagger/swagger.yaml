openapi: 3.0.0
info:
  title: Seedly API
  version: 1.0.0
  description: API documentation for the Seedly project

servers:
  - url: http://localhost:5000

paths:
  /plants:
    get:
      summary: Get all plants
      description: Returns a list of all available plants
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /plants/search:
    get:
      summary: Search plants by name
      description: Returns filtered plant data based on a search term
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: Filter by plant name or description
        - name: edible
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by edibility
      responses:
        '200':
          description: Filtered list of plants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Plant'
                  message:
                    type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /plants/{id}:
    get:
      summary: Get a plant by ID
      description: Returns plant details for the given ID. Validates input and output data.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique plant ID
      responses:
        '200':
          description: Plant found and returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        '400':
          description: Invalid ID format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Id
                  details:
                    type: object
        '404':
          description: Plant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error or invalid plant data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /plants/{id}/tasks:
    get:
      summary: Get tasks for a specific plant
      description: Retrieves all tasks associated with a plant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the plant
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: Plant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /payment:
    post:
      summary: Store a payment record
      description: >
        Accepts payment details, validates them, and stores the payment record
        without sensitive card data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cardholderName
                - expMonth
                - expYear
              properties:
                cardholderName:
                  type: string
                  description: Name on the card
                  example: "John Doe"
                expMonth:
                  type: integer
                  description: Expiration month of the card (1-12)
                  example: 12
                expYear:
                  type: integer
                  description: Expiration year of the card (e.g., 2026)
                  example: 2026
                saveCard:
                  type: boolean
                  description: Whether to save the card info (no sensitive data stored)
                  default: false
                userId:
                  type: string
                  nullable: true
                  description: User ID associated with the payment, if any
                  example: "12345"
      responses:
        '200':
          description: Payment stored successfully (no sensitive data saved)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Payment stored (no sensitive data)
        '400':
          description: Invalid payment data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid payment data
                  details:
                    type: object
                    description: Validation error details
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

components:
  schemas:
    Plant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d59f951a-cd68-4166-bb5e-3d942ad65c1d
        product_name:
          type: string
          example: "Pumpkin 'Baby Bear'"
        description:
          type: string
          example: "Baby bear pumpkins have slender, sturdy, easy to grip handles..."
        price:
          type: number
          example: 48
        cycle:
          type: array
          items:
            type: string
          example: ["Annual"]
        image_url:
          type: string
          format: uri
          example: "https://roztownsend.net/seedly-assets/Pumpkin-Baby-Bear.webp"
        isedible:
          type: boolean
          example: true
        sunlight:
          type: string
          example: Full
        createdAt:
          type: string
          format: date-time
          example: "2025-05-26T10:41:01.982Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-26T10:41:01.983Z"

    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          example: Water the plant
        dueDate:
          type: string
          format: date
          example: '2025-06-01'

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Internal server error


